"""
Абонент получает по трем каналам шифротексты: C_1 = ЩРЯЙЭВЗЙОАУНТТРНЙОЪУ, С_2 = ОДПНУТПТЕОЭЩТМШЛЙПРГ, С_3 = ЗЧЬКУХПЛТДКИРЕХЗЫЙЙЪ.
Абонент генерирует свой идентификатор, который равен значениям u(3), u(4), u(5) его ЛРС с начальными заполнением u(0) = 28, u(1) = 17
u(2) = 21. Найти идентификатор, если каждый из шифротекстов получен наложением ⊕ на открытый текст М = СЕТЕВАЯИДЕНТИФИКАЦИЯ,
соответствующей гаммы, представляющей собой периодическую ЛРП, а произведение (λ^3*t^3)modq каждой из этих ЛРП служит соответствующим
коэффициентом ЛРС. P конечное поле из q = 32 элементов: {0,1,2,3..,31}
"""

import cryptolib as cl

abc_18 = "ДЪЫЬХАЯБЖНКФПЮИЙЕЛМЭТГЦРСОУВЧШЩЗ"
abc_3 =  "ЭЛЫУХАЯБЖЧЕФПЮИЙКНМДТГЦРСОВЬЪШЩЗ"

def lrs(list):
    print(list)
    l, t = int(input("λ = ")), int(input("t = "))
    return l**3*t**3 % q
"""
#18       -=-=Дано=-=-
C = ["ПДАДИМЬАИУПЪОИАХЙЭВЛ",
     "МБИАЩПАОУАПШЮЧТЗДЗЮЛ",
     "ХДЬОЫШРДВДДРЗАГУПГЗЖ"]
U = [4, 12, 26, 0, 0, 0]
#        -=-=Дано=-=-
"""
#3       -=-=Дано=-=-
C = ["ЩРЯЙЭВЗЙОАУНТТРНЙОЪУ",
     "ОДПНУТПТЕОЭЩТМШЛЙПРГ",
     "ЗЧЬКУХПЛТДКИРЕХЗЫЙЙЪ"]
U = [18, 25, 11, 0, 0, 0]
#        -=-=Дано=-=-

M =  "СЕТЕВАЯИДЕНТИФИКАЦИЯ"
q = 32
f = list(range(3))
m = []

for i in range (len(M)):
    m += cl.zero_fill(list(cl.toBin(int(abc_3.index(M[i])))),5)

for i in range(3):
    f[i] = []
    for j in range (len(C[i])):
        f[i] += cl.zero_fill(list(cl.toBin(int(abc_3.index(C[i][j])))),5)
    f[i] = lrs(cl.num_to_word(abc_3, cl.XOR(m, f[i])))

for i in range(3):
    U[i+3] = (f[0]*U[i] + f[1]*U[i+1] + f[2]*U[i+2])%q

print(''.join(abc_3[U[i+3]] for i in range (3)))